程序第一行声明了一个包含5个字符的字符数组，因为我们无需修改数组的内容，所以将之定义为常量。第二行定义了一个指向字符常量的指针，该指针可以指向不同的字符常量，但是不允许通过该指针修改所指常量的值。
while循环的条件是*cp，只要指针cp所指的字符不是空字符'\0'，循环就需被重复执行，循环的任务有两项：首先输出指针当前所指的字符，然后将指针向后移动一位。
该程序的原意是输出ca中存储的5个字符，每个字符占一行，但实际的执行效果恐无法合乎预期。因为以列表初始化方式赋值的C风格字符串与以字符串字面值赋值的有所区别，后者会在字符串最后额外增加一个空字符以示字符串的结束，而前者不会这样做。
因此在该程序中，ca的5个字符全部输出后，并没有遇到预期的空字符，也就是说，while循环的条件仍未满足，无法跳出。程序继续在内存中ca的存储位置之后挨个寻找空字符，知道找到为止，整个过程中，额外经历的内容也将被输出出来，从而产生错误。
想要实现程序的原意，可以做以下两种修改方法中的任意一种：
1.修改第一行如下
const char ca[]={'h','e','l','l','o','\0'};
2.修改第一行如下
const char ca[]="hello";