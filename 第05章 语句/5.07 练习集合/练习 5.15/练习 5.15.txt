(a)错误是在for语句中定义了变量ix，然后试图在for语句外继续使用ix。因为ix定义在for语句的内部，所以其作用域仅限于for语句内部。在if语句中，ix已经失效，所以程序无法编译通过。程序可改为
    int  ix = 0 ;
    for( ; ix != sz ; ++ix ){ 
        /* ... */ 
    }
    if( ix != sz ) 
        // ...
注：此处也验证了5.4.1节"使用while循环"中使用while循环的一个好处。
(b)错误有两处，一是变量ix未经初始化就使用，二是for语句的控制结构缺少一句话，在语法上是错误的。程序可改为
    int ix ;
    for( ix = 0 ; ix != sz ; ++ix ){
        /* ... */
    }
(c)错误是逻辑性的：一旦进入循环，程序有可能会无休止的执行下去。如果初始情况下就有ix != sz成立，则ix和sz一直同步增长，（如果语句内没有其他干扰语句）可能使得循环的终止条件永不满足，形成逻辑死循环。程序可改为
    for(int ix = 0 ; ix != sz ; ++ix ){
        /* ... */
    }
