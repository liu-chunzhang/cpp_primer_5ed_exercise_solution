当我们想把数组作为函数的形参时，有三种可供选择的方式：一是声明为指针，二是声明为不限维度的数组，三是申明为维度确定的数组。实际上，因为数组传入函数时实参自动转换为指向数组首元的指针，所以这三种方式等价。
本题中print函数的参数实际上等同于一个常量整型指针const int*，形参ia的维度10只是我们期望的数组维度，但是实际上不一定。实际上，即使传入的实参数组的维度不是10，也可以正常调用print函数。上述print函数的定义存在潜在风险，即虽然我们期望传入的数组维度是10，但是实际上任意维度的数组都可以传入。并且如果传入数组的维度大于10，print函数将仅输出前10个元素，不至于发生错误；相反，若传入的数组维度不足10，则print函数将强行输出一些未定义的值。程序可改为
void print( const int ia[] , const size_t sz ){
    for( size_t i = 0 ; i != sz ; ++i )
        cout << ia[i] << endl;
}