对于题目本身可以有两种不同的理解：一是交换指针本身的值（也就是交换指针所存的内存地址）；二是交换指针所指代的内容。
以下函数实际上既不能做到交换指针，也不能做到交换指针所指的内容。
void exchange_2_int_pointers ( int *i , int *j ) {
    int *tem = i ;
    i = j ;
    j = tem ;
}
以值传递的形式使用指针，所有的改变都仅限于函数内部，当函数执行完毕后既不会改变函数本身的值，也不会改变指针所指的内容。
以下函数实际上没有做到交换指针，但交换了指针所指的内容。
void exchange_2_int_pointers ( int *i , int *j ) {
    int tem = *i ;
    *i = *j ;
    *j = tem ;
}
以值传递的形式使用指针，但是在函数内通过解引用的方式直接访问内存并修改了指针所指的内容。
以下函数实际上做到交换指针，但不去交换指针所指的内容。
void exchange_2_int_pointers ( int *&i , int *&j ) {
    int *tem = i ;
    i = j ;
    j = tem ;
}
参数形式是int *&，其含义是，该参数是一个引用，引用的对象是内存中的一个int指针，使用这种方式可以把指针当成对象，交换指针本身的值。
既然交换了指针，当然解引用时所得的结果也相应发生改变。