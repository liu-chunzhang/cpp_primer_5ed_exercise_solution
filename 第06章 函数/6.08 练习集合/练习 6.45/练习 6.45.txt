决定一个函数是否可以内联化有很多评判的依据。一般来说，内联机制适用于规模较小，流程直接，频繁调用的函数。一旦函数定义成内联的，则在编译阶段就展开了该函数，以消除在运行时产生的额外开销。如果函数的规模很大（比如上百行），不利于展开或者函数只被调用了一两次，那么这样的函数没必要也不应该是内联的。
在本章前面实现的代码中，大多规模较小，流程直接，适合于设置为内联函数。如练习6.11中的reset函数可以设置为
inline void reset( int &i ) {
    i = 0 ; 
}