按照教材正文上的程序版本来论述下面问题。
如果未定义析构函数，在销毁HasPtr对象时合成的析构函数不会释放ps指向的内存，会造成内存泄漏。
如果未定义拷贝构造函数，在拷贝HasPtr对象时，合成的拷贝构造函数会简单复制ps成员，使得两个HasPtr指向相同的string。当其中一个HasPtr修改string内容时，另一个HasPtr也被改变，这并不符合我们的设想。如果同时定义了析构函数，情况会更糟糕：当销毁其中一个HasPtr时，ps指向的string被销毁，另一个HasPtr的ps成为空悬指针。