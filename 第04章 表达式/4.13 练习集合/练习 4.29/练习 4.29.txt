sizeof(x)的运算对象x是数组的名字，求值结果是整个数组所占空间的大小，等价于对数组中所有的元素各执行一次sizeof运算并对所得结果求和。读者尤其需要注意，sizeof运算符不会把数组转换成指针来处理。在本例中，x是一个int数组且包含10个元素，所以sizeof(x)的求值结果是10个int值所占空间的总和。
sizeof(*x)的运算对象*x是一条解引用表达式，此处的x即是数组的名称，也表示指向数组首元的指针，解引用该指针得到指针所指的内容，在本例中是一个int。所以sizeof(*x)在这里等价于sizeof(int)，即int所占的内存空间。
sizeof(x)/sizeof(*x)可以理解为数组x所占的全部空间除以其中一个元素所占的空间，得到的结果应该是数组x的元素总数。实际上，因为C++的内置数组并没有定义成员函数size()，所以通常无法直接得到数组的容量。本题所示的方法是计算得到数组容量的一种常规方法。
sizeof(p)的运算对象是一个指针，求值结果是指针所占空间的大小。
sizeof(*p)的运算对象*p是指针p所指的对象，即int变量x，所以求值结果是int值所占的空间大小。
sizeof(int)  = 4 , size(*int) = 8 。从而本题程序在Codeblocks 20.03输出结果应该是：
10
2