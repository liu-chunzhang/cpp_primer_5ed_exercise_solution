此调用是错误的。p.get()获得一个普通指针，指向p所指向的int对象。利用此指针创建一个shared_ptr，而不是利用p创建一个shared_ptr，将不会形成正确的动态对象共享。编译器会认为p和ptr使用两个地址（虽然实际上它们相等）创建的两个不相干的shared_ptr，而非共享同一个动态对象。这样，两者的引用计数均为1。当process执行完毕后，ptr的引用计数减为0，所管理的内存地址被释放，而此内存就是p所管理的，p成为一个管理空悬指针的shared_ptr。