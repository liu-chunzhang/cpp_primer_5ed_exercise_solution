如果命名空间Exercise的所有成员的using声明放在标记为”位置1“的地方，则Exercise中的成员在全局作用域中可见。using Exercise::ivar; 会导致ivar重复定义的编译错误，因为在全局作用域定义了一个同名变量（注意，由using声明引起的二义性错误在声明点检测）；而manip中的double dvar = 3.1416 ;声明了一个局部变量dvar，在函数体作用域中它将屏蔽Exercise::dvar；int iobj = limit + 1 ;声明了一个局部变量iobj，并采用Exercise::limit+1的结果对其进行初始化。
如果命名空间Exercise的所有成员的using声明放在”位置2“的地方，则manip中的double dvar = 3.1416 ;属于对变量dvar的重复定义，会出现编译错误；int iobj = limit + 1 ;声明了一个局部变量iobj，采用Exercise::limit+1的结果对其进行初始化；++ivar ;访问到的是Exercise::ivar，而++::ivar ;访问的是全局变量ivar。
如果命名空间Exercise的using指示放在标记为”位置1“的地方，则manip中的double dvar = 3.1416 ;声明了一个局部变量dvar，在函数体作用域中它将屏蔽Exercise::dvar；int iobj = limit + 1 ;声明了一个局部变量iobj，并用Exercise::limit+1的结果对其进行初始化；++ivar ;出现二义性错误，因为编译器无法分别访问的是Exercise::ivar还是全局变量ivar；而++::ivar ;访问的是全局变量ivar。
如果命名空间Exercise的using指示放在标记为”位置2“的地方，则Exercise的成员看来好像是声明在全局作用域中的一样，manip中的double dvar = 3.1416 ;声明了一个局部变量var，在函数体作用域中它将屏蔽Exercise::dvar；int iobj = limit + 1 ;声明了一个局部变量iobj，并用Exercise::limit+1的结果对其进行初始化；++ivar ;出现二义性错误，因为编译器无法分别访问的是Exercise::ivar还是全局变量ivar；而++::ivar ;访问的是全局变量ivar。